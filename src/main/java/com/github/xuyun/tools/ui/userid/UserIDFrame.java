/*
 * Copyright 2013 shizihu.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.github.xuyun.tools.ui.userid;

import com.github.xuyun.tools.util.ConfigUtils;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import org.apache.commons.io.FileUtils;
import org.apache.commons.io.IOUtils;
import org.apache.commons.lang.StringUtils;

/**
 *
 * @author shizihu
 */
public class UserIDFrame extends javax.swing.JFrame {

    public static final int DEFAULT_VALUE = 250;

    private final LogCat logCat;

    /**
     * Creates new form UserIDFrame
     */
    public UserIDFrame() {
        initComponents();

        this.spnUserCount.setValue(DEFAULT_VALUE);
        this.logCat = new LogCat(this, this.txtaLog);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtFilePath = new javax.swing.JTextField();
        btnSelectFile = new javax.swing.JButton();
        spnUserCount = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        btnSplitUserID = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaLog = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("迁移用户ID分割器");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("参数设置"));

        txtFilePath.setEditable(false);

        btnSelectFile.setText("选择文件");
        btnSelectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectFileActionPerformed(evt);
            }
        });

        jLabel1.setText("单文件数量：");

        btnSplitUserID.setText("执行分割");
        btnSplitUserID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSplitUserIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtFilePath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelectFile))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnUserCount, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 299, Short.MAX_VALUE)
                        .addComponent(btnSplitUserID)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelectFile))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(spnUserCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSplitUserID))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtaLog.setEditable(false);
        txtaLog.setColumns(20);
        txtaLog.setRows(5);
        jScrollPane1.setViewportView(txtaLog);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectFileActionPerformed
        File currentPath = FileUtils.getUserDirectory();

        String tmp = ConfigUtils.get().getUserFilePath();
        if (StringUtils.isNotBlank(tmp)) {
            File file = new File(tmp);
            if (file.exists()) {
                if (file.isDirectory()) {
                    currentPath = file;
                } else {
                    currentPath = file.getParentFile();
                }
            }
        }

        JFileChooser fileChooser = new JFileChooser(currentPath);
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int flag = fileChooser.showOpenDialog(this);
        if (flag == JFileChooser.APPROVE_OPTION) {
            File selectFile = fileChooser.getSelectedFile();
            if (selectFile != null && selectFile.exists()) {
                this.txtFilePath.setText(selectFile.getAbsolutePath());
            }
        }
    }//GEN-LAST:event_btnSelectFileActionPerformed

    private void btnSplitUserIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSplitUserIDActionPerformed
        String filePath = this.txtFilePath.getText();
        File srcFile = new File(filePath);
        if (!srcFile.exists()) {
            this.logCat.warn("文件[" + filePath + "]不存在，请重新选择！");
            return;
        }

        ConfigUtils.get().setUserFilePath(srcFile.getParent());
        ConfigUtils.save();

        int value = Integer.parseInt(String.valueOf(this.spnUserCount.getValue()));
        if (value < 1) {
            this.logCat.info("单文件数量值[" + value + "]太小，取默认值[" + DEFAULT_VALUE + "]！");
            value = DEFAULT_VALUE;
        }

        InputStream input = null;
        try {
            input = new FileInputStream(srcFile);
            List<String> lines = IOUtils.readLines(input);

            int total = lines.size();
            int fileCount = (total + value - 1) / value;
            this.logCat.info("总用户ID数量[" + total + "]，将分成[" + fileCount + "]文件！");

            File path = srcFile.getParentFile();
            for (int i = 0; i < fileCount; i++) {
                List<String> slines = new ArrayList<String>(value);
                for (int j = (i * value); (j < (i + 1) * value) && j < total; j++) {
                    slines.add(lines.get(j));
                }

                String name = StringUtils.leftPad(Integer.toString(i), 2, "0") + ".txt";
                File file = new File(path, name);
                this.logCat.info("开始分割文件[" + file.getAbsolutePath() + "]...");

                OutputStream output = null;
                try {
                    output = new FileOutputStream(file);
                    IOUtils.writeLines(slines, IOUtils.LINE_SEPARATOR_WINDOWS, output);
                } catch (Exception e) {
                    this.logCat.error("写入分片文件[" + file.getAbsolutePath() + "]异常！");
                    e.printStackTrace();
                } finally {
                    IOUtils.closeQuietly(output);
                }

                this.logCat.info("分割文件[" + file.getAbsolutePath() + "]完成，记录数[" + slines.size() + "].");
            }
        } catch (Exception e) {
            this.logCat.error("读取文件[" + filePath + "]异常！");
            e.printStackTrace();
        } finally {
            IOUtils.closeQuietly(input);
        }
    }//GEN-LAST:event_btnSplitUserIDActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSelectFile;
    private javax.swing.JButton btnSplitUserID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spnUserCount;
    private javax.swing.JTextField txtFilePath;
    private javax.swing.JTextArea txtaLog;
    // End of variables declaration//GEN-END:variables
}
